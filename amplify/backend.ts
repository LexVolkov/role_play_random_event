import { defineBackend } from '@aws-amplify/backend';
import { data } from './data/resource';
import { auth } from './auth/resource';
import { CfnIdentityPool, CfnIdentityPoolRoleAttachment } from "aws-cdk-lib/aws-cognito";
import { Role, FederatedPrincipal } from "aws-cdk-lib/aws-iam";

const backend = defineBackend({
  auth,
  data,
});
// üèó –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–µ–∫ –¥–ª—è Cognito
const cognitoStack = backend.createStack("cognito-stack");
// üìå –°–æ–∑–¥–∞–µ–º Identity Pool
const identityPool = new CfnIdentityPool(cognitoStack, "RPREGuestIdentityPool", {
  allowUnauthenticatedIdentities: true, // –†–∞–∑—Ä–µ—à–∞–µ–º –≥–æ—Å—Ç–µ–≤–æ–π –≤—Ö–æ–¥
  identityPoolName: "RPREGuestIdentityPool",
});
// üõ† –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å –¥–ª—è –Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const unauthenticatedRole = new Role(cognitoStack, "UnauthenticatedRole", {
  assumedBy: new FederatedPrincipal(
    "cognito-identity.amazonaws.com",
    {
      StringEquals: { "cognito-identity.amazonaws.com:aud": identityPool.ref },
      "ForAnyValue:StringLike": { "cognito-identity.amazonaws.com:amr": "unauthenticated" },
    },
    "sts:AssumeRoleWithWebIdentity"
  ),
});

// üèó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ä–æ–ª—å –∫ Identity Pool
new CfnIdentityPoolRoleAttachment(cognitoStack, "IdentityPoolRoleAttachment", {
  identityPoolId: identityPool.ref,
  roles: {
    unauthenticated: unauthenticatedRole.roleArn,
  },
});